on:
  push:
    paths-ignore:
      - ".vscode/**"
      - "docs/**"
      - "frontend/**"
      - ".gitignore"
      - "LICENSE"
      - "README.md"
      - "backend/.gitignore"
      - "backend/README.md"
      - "backend/.vscode/**"
      - "backend/backup-json/**"
      - ".github/workflows/frontend.yml"
      - ".github/workflows/coverage.yml"
  pull_request:
    paths-ignore:
      - ".vscode/**"
      - "docs/**"
      - "frontend/**"
      - ".gitignore"
      - "LICENSE"
      - "README.md"
      - "backend/.gitignore"
      - "backend/README.md"
      - "backend/.vscode/**"
      - "backend/backup-json/**"
      - ".github/workflows/frontend.yml"
      - ".github/workflows/coverage.yml"

name: Backend CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install Stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: odcapi
          POSTGRES_PASSWORD: odcapi
          POSTGRES_DB: odcadmin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add clippy
        run: rustup component add clippy
      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
