on:
  push:
    paths-ignore:
      - ".vscode/**"
      - "docs/**"
      - ".gitignore"
      - "LICENSE"
      - "README.md"
      - "frontend/.gitignore"
      - "frontend/README.md"
      - "frontend/.vscode/**"
      - "backend/.gitignore"
      - "backend/README.md"
      - "backend/.vscode/**"
      - "backend/backup-json/**"
      - ".github/workflows/backend.yml"
      - ".github/workflows/frontend.yml"
      - ".github/workflows/fullstack.yml"
  pull_request:
    paths-ignore:
      - ".vscode/**"
      - "docs/**"
      - ".gitignore"
      - "LICENSE"
      - "README.md"
      - "frontend/.gitignore"
      - "frontend/README.md"
      - "frontend/.vscode/**"
      - "backend/.gitignore"
      - "backend/README.md"
      - "backend/.vscode/**"
      - "backend/backup-json/**"
      - ".github/workflows/backend.yml"
      - ".github/workflows/frontend.yml"
      - ".github/workflows/fullstack.yml"

name: Coverage

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: npm install
        working-directory: frontend
      - name: Generate coverage report
        run: npm test -- --watchAll=false --coverage --coverageReporters lcov
        working-directory: frontend
      - name: Rename report
        run: mv frontend/coverage/lcov.info frontend.info
      - name: Upload report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend.info
          path: frontend.info

  backend:
    name: Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: odcapi
          POSTGRES_PASSWORD: odcapi
          POSTGRES_DB: odcadmin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            backend/target
          key: ${{ runner.os }}-cargo-1-42-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin
      - name: Generate coverage report
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --out Lcov --exclude-files **/target/** --ignore-tests
      - name: Rename report
        run: mv lcov.info backend.info
      - name: Upload report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend.info
          path: backend.info

  fullstack:
    name: Fullstack
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: odcapi
          POSTGRES_PASSWORD: odcapi
          POSTGRES_DB: odcadmin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            backend/target
          key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-coverage-
            ${{ runner.os }}-cargo-
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend
      - name: Compile backend
        run: cargo build
      - name: Run backend
        run: cargo run &
      - name: Generate coverage
        run: sleep 5 && npm run test-backend -- --watchAll=false --coverage --coverageReporters lcov
        working-directory: frontend
      - name: Rename report
        run: mv frontend/coverage/lcov.info fullstack.info
      - name: Upload report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: fullstack.info
          path: fullstack.info

  upload:
    name: Upload
    needs: [frontend, backend, fullstack]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download frontend
        uses: actions/download-artifact@v2
        with:
          name: frontend.info
      - name: Download backend
        uses: actions/download-artifact@v2
        with:
          name: backend.info
      - name: Download fullstack
        uses: actions/download-artifact@v2
        with:
          name: fullstack.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: frontend.info,backend.info,fullstack.info
